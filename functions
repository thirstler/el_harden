#!/bin/bash

##
# Add a mount option to a mount-point in the fstab
# Use: add_mp_opt [mount point] [option]
add_mp_opt () {
    
    MP=$1
    OPTION=$2
    
    # If the mount-point is not there, return
    grep -qE ".*[ \t]+${MP}[ \t]+" /etc/fstab ||return 0

    # If it's already there return
    grep -qE ".*[ \t]+${MP}[ \t]+.*[,\t ]?${OPTION},?" /etc/fstab && return 0
    
    # add option
    sed -Ei "s|^([^ \t]+\s+)${MP}(\s+[^ \t]+)\s+([^ \t]+)(.*)|\1 ${MP}\2 \3\,${OPTION} \4|" /etc/fstab || return 1
    
    # remove defaults if necessary
    sed -Ei "s|(.*[ \t]+${MP}[ \t]+.*)defaults,?|\1|" /etc/fstab
 
    return 0
}

##
# Hard-set the entire mount options section for a given mount-point
set_mp_opts () {
    sed -Ei "s|^([^ \t]+\s+)${1}(\s+[^ \t]+)\s+[^ \t]+(.*)|\1 ${1}\2 ${2} \3|" /etc/fstab || return 1
}

##
# Set RH version and release information
set_rh_release () {

    if [ ! -f /etc/redhat-release ]; then
        echo "this does not appear to be a RHEL (or derivative) system, exiting"
        return 1
    fi

    if ! grep -qiE "centos|red hat|fedora" /etc/redhat-release; then
        cat << EOF
script may not support this OS:
    $(cat /etc/redhat-release),
exiting
EOF
        return 1
    fi
    
    export RH_VERSION=$(sed -E "s/.+release ([0-9]+)\.?([0-9]?) .+/\1/" /etc/redhat-release)
    export RH_RELEASE=$(sed -E "s/.+release [0-9]+\.([0-9]+) .+/\1/" /etc/redhat-release)
    export RH_TYPE=$(
        (grep -qi "fedora" /etc/redhat-release && echo "fedora")
        (grep -qi "centos" /etc/redhat-release && echo "el")
        (grep -qi "red hat" /etc/redhat-release && echo "el")
        (grep -qi "scientific" /etc/redhat-release && echo "el")
    )
    export RH_DIST=$(sed -E "s/(.+) release .*/\1/" /etc/redhat-release)
}

add_pam_cracklib_opt () {

    OPTION=$1
    VALUE="=$2"
    FILE=$3

    # If value is empty then there is no value
    [[ "${VALUE}" == "=" ]] && VALUE=""

    ##
    # Add cracklib line before pam_unix in the password section if necessary
    if ! grep -qE "^password\s+.+\s+pam_cracklib\.so" $FILE; then
        sed --follow-symlinks -Ei "s/^(password\s+sufficient\s+pam_unix\.so .*)/password    required      pam_cracklib\.so try_first_pass\n\1/" $FILE
    fi

    ##
    # Add/update option
    if grep -qE "^password\s+[^\s]+\s+pam_cracklib\.so\s+.+?${OPTION}(=\w+)?" $FILE; then
        sed --follow-symlinks -Ei "s/(^password\s+[^\s]+\s+pam_cracklib\.so\s+.+?)${OPTION}(=[^\s]+)?(.*)+/\1${OPTION}${VALUE}\3/" $FILE
    else
        sed --follow-symlinks -Ei "s/(^password\s+[^\s]+\s+pam_cracklib\.so.*)/\1 ${OPTION}${VALUE}/" $FILE
    fi


}

